<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd ">
	
	<!-- 开启注解模式 -->
	<context:component-scan
		base-package="com.xiaqi"></context:component-scan>

	<!-- 引入c3p0连接池 -->
	<!-- 读取db.properties配置文件 -->
	<context:property-placeholder
		location="classpath:db.properties" />
		
	<!-- 配置c3p0连接池 -->
	<bean name="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>



	<!-- 整合hibernate -->
	<!--在spring中配置hibernate属性 -->
	<bean name="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<!-- 引入c3p0连接池 -->
		<property name="dataSource" ref="dataSource"></property>
		
		<!-- 配置hibernate的属性 -->
		<property name="hibernateProperties">
			<props>
				<!-- 方言 -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<!-- 配置hibernate的3个可选配置 -->
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>

		<!-- 读取类路径com/xiaqi/entity对应目录下的hibernate映射文件-->
		<property name="mappingDirectoryLocations"
			value="classpath:com/xiaqi/entity"></property>
	</bean>

	<!-- 配置hibernateTemplate,并注入sessionFactory -->
	<bean name="hibernateTemplate"
		class="org.springframework.orm.hibernate5.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- 注册userDao到spring容器中 -->
	<bean name="userDao" class="com.xiaqi.dao.impl.UserDaoImpl">
		<property name="template" ref="hibernateTemplate"></property>
	</bean>

	<!-- 开启事务管理 -->
	<bean name="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- 通知对象 -->
	<tx:advice id="txAdvice"
		transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" isolation="REPEATABLE_READ"
				propagation="REQUIRED" read-only="false" />
			<tx:method name="update*" isolation="REPEATABLE_READ"
				propagation="REQUIRED" read-only="false" />
			<tx:method name="delete*" isolation="REPEATABLE_READ"
				propagation="REQUIRED" read-only="false" />
		</tx:attributes>
	</tx:advice>
	
	<!-- 将通知对象织入目标对象 -->
	<aop:config>
		<!-- 执行表达式之后需更改为service实现类对应的包 -->
		<aop:pointcut
			expression="execution(* com.xiaqi.dao.impl.*Impl.*(..))"
			id="txpc" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txpc" />
	</aop:config>

</beans>